import RPi.GPIO as GPIO
import time
import glob

# ðŸŒ¡ DS18B20 Sensor Pfad
base_dir = "/sys/bus/w1/devices/"
device_folder = glob.glob(base_dir + "28*")[0]
device_file = device_folder + "/w1_slave"

# ðŸ›  GPIO Setup fÃ¼r 7-Segment-Anzeige (Pins basierend auf deinem Code)
GPIO.setmode(GPIO.BCM)

segments = (11, 6, 13, 8, 7, 10, 18, 25)  # A, B, C, D, E, F, G, DP
digits = (22, 27, 17, 24)  # DIG0-DIG3

num = {
    " ": (0,0,0,0,0,0,0),
    "0": (1,1,1,1,1,1,0), "1": (0,1,1,0,0,0,0), "2": (1,1,0,1,1,0,1),
    "3": (1,1,1,1,0,0,1), "4": (0,1,1,0,0,1,1), "5": (1,0,1,1,0,1,1),
    "6": (1,0,1,1,1,1,1), "7": (1,1,1,0,0,0,0), "8": (1,1,1,1,1,1,1),
    "9": (1,1,1,1,0,1,1)
}

for segment in segments:
    GPIO.setup(segment, GPIO.OUT)
    GPIO.output(segment, 0)

for digit in digits:
    GPIO.setup(digit, GPIO.OUT)
    GPIO.output(digit, 1)

# ðŸŒ¡ Temperatur auslesen
def read_temp():
    with open(device_file, "r") as f:
        lines = f.readlines()
    while "YES" not in lines[0]:
        time.sleep(0.2)
        with open(device_file, "r") as f:
            lines = f.readlines()
    temp_c = float(lines[1].split("t=")[1]) / 1000.0
    return round(temp_c)  # Ganze Zahl

# ðŸ–¥ 7-Segment-Anzeige steuern (Uhrzeit anzeigen)
def show_time():
    n = time.strftime("%H%M")  # Stunden + Minuten
    s = str(n).rjust(4)
    for digit in range(4):
        for loop in range(0,7):
            GPIO.output(segments[loop], num[s[digit]][loop])
            if (int(time.strftime("%S")) % 2 == 0) and (digit == 1):
                GPIO.output(25, 1)  # Sekundenblinkpunkt
            else:
                GPIO.output(25, 0)
        GPIO.output(digits[digit], 0)
        time.sleep(0.001)
        GPIO.output(digits[digit], 1)

# ðŸ“Š Hauptprogramm
try:
    while True:
        temp = read_temp()
        print(f"ðŸŒ¡ Temperatur: {temp}Â°C")  # Temperatur nur in der Konsole
        show_time()  # 7-Segment zeigt Uhrzeit
        time.sleep(1)

except KeyboardInterrupt:
    GPIO.cleanup()
    print("Programm beendet.")
